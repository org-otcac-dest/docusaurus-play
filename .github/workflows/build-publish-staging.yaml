name: Build and Deploy Staging Docker Images

on:
    push:
      branches: 
        - main
      paths-ignore:
      - "**/README.md"
      - "**/.github/workflows/**"
    workflow_dispatch:   

jobs:
    build-preview:
      name: Build Staging Artifacts
      environment: 
        name: preview
      runs-on: ubuntu-latest
      outputs:
        image_version: ${{ steps.build_image_tag.outputs.image_version }}
  
      steps:
        - name: Checkout
          uses: actions/checkout@v4
  
        - name: Setup NodeJS
          uses: actions/setup-node@v2
          with:
            node-version: 18 # Use Node.js 18 her

        - name: Install NodeJS Dependencies
          run: npm install
  
        - name: Build Static App
          env: 
            REACT_APP_DOCUSAURUS_BASE_URL: ${{ vars.DOCUSAURUS_BASE_URL }}
          run: npm run build
        
        - name: Get Commit Hash
          id: commit_hash
          uses: prompt/actions-commit-hash@v3

        - name: Get Current Date
          id: date
          run: echo "today=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT

        - name: Build Image Tag
          id: build_image_tag
          run: echo "image_version=${{ steps.date.outputs.today }}.${{github.run_number}}.0-${{ steps.commit_hash.outputs.short }}" >> $GITHUB_OUTPUT

        - name: Build Docker Metadata
          id: meta
          uses: docker/metadata-action@v5
          with:
            # list of Docker images to use as base name for tags
            images: |
              akyriako78/docusaurus-play
            # generate Docker tags based on the following events/attributes
            tags: |
              type=raw,value=${{ steps.build_image_tag.outputs.image_version }}
    
        - name: Login to Container Registry
          uses: docker/login-action@v3
          with:
            username: akyriako78
            password: ${{ secrets.REGISTRY_PASSWORD }}
          
        - name: Setup Docker Buildx
          id: buildx
          uses: docker/setup-buildx-action@v3.7.1

        - name: Build and Push (Docker Image)
          id: docker_build 
          uses: docker/build-push-action@v6.9.0
          with: 
            context: ./
            file: ./Dockerfile
            provenance: false
            push: ${{ github.event_name != 'pull_request' }}
            tags: ${{ steps.meta.outputs.tags }}
            labels: ${{ steps.meta.outputs.labels }}
            annotations: ${{ steps.meta.outputs.annotations }}

    update-helm-charts:
      needs: [build-preview]
      environment: preview
      runs-on: ubuntu-latest
      permissions:
        contents: write
        pull-requests: write

      steps:
        - name: Create GitHub App Token
          id: app-token
          uses: actions/create-github-app-token@v1
          with:
            app-id: ${{ secrets.APP_ID }}
            private-key: ${{ secrets.APP_KEY }}
        - name: Checkout Charts Repo
          uses: actions/checkout@v4
          with: 
            repository: "${{ vars.DOCS_NEXT_CHARTS_ORG }}/${{ vars.DOCS_NEXT_CHARTS_REPO }}"
            token: ${{ secrets.GITHUB_TOKEN }}
        - name: Commit Changes
          env:
            image: ${{ vars.REGISTRY }}/${{ vars.REGISTRY_ORG }}/${{ vars.IMG_NAME }}
            tag: ${{ needs.build-preview.outputs.image_version }}
          run: |
            git config --global user.name 'github-actions[bot]'
            git config --global user.email 'github-actions[bot]@users.noreply.github.com'
            sed -i 's/^tag: .*/tag: ${{ env.tag }}/' ./charts/docusaurus/values-stg.yaml
            sed -i 's/^image: .*/image: ${{ env.image }}/' ./charts/docusaurus/values-stg.yaml
            git commit -am "Automatic commit from GitHub Actions triggered by action #${{github.run_number}}"
        - name: Create Pull Request
          uses: peter-evans/create-pull-request@v7
          env:
            remote_pr_branch: 'release/staging-${{ needs.build-preview.outputs.image_version }}'
          with:
            title: ${{ env.remote_pr_branch }}
            token: ${{ steps.app-token.outputs.token }}
            branch: ${{ env.remote_pr_branch }}
          